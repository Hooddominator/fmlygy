'use strict';

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _FileParser = require('./FileParser');

var _FileParser2 = _interopRequireDefault(_FileParser);

var _log = require('./log');

var log = _interopRequireWildcard(_log);

var fp = new _FileParser2['default'](_path2['default'].join(__dirname, '../full.srt'));
//const fp = new FileParser(path.join(__dirname, '../test.srt'));
fp.parse().then(function () {
  return log.log(fp.getSubtitles());
})['catch'](console.error);