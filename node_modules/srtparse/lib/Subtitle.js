'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _Time = require('./Time');

var _Time2 = _interopRequireDefault(_Time);

var Subtitle = (function () {
  function Subtitle() {
    _classCallCheck(this, Subtitle);

    this._endTime = null;
    this._index = null;
    this._text = [];
    this._startTime = null;
  }

  _createClass(Subtitle, [{
    key: 'getEndTime',
    value: function getEndTime() {
      return this._endTime;
    }
  }, {
    key: 'getIndex',
    value: function getIndex() {
      return this._index;
    }
  }, {
    key: 'getText',
    value: function getText() {
      return this._text;
    }
  }, {
    key: 'getTextAsString',
    value: function getTextAsString() {
      return this.getText().join('\n');
    }
  }, {
    key: 'getStartTime',
    value: function getStartTime() {
      return this._startTime;
    }
  }, {
    key: 'addText',
    value: function addText(text) {
      this._text.push(text);
    }
  }, {
    key: 'setText',
    value: function setText(text) {
      this._text = text;
    }
  }, {
    key: 'setEndTime',
    value: function setEndTime(endTime) {
      this._endTime = endTime;
    }
  }, {
    key: 'setIndex',
    value: function setIndex(index) {
      this._index = index;
    }
  }, {
    key: 'setStartTime',
    value: function setStartTime(startTime) {
      this._startTime = startTime;
    }
  }, {
    key: 'toSRTString',
    value: function toSRTString() {
      var srt = '' + this.getIndex();
      srt = srt + '\n' + this.getStartTime().toSRTString() + ' --> ' + this.getEndTime().toSRTString();
      var text = this.getText();
      for (var i = 0; i < text.length; i++) {
        srt = srt + '\n' + text[i];
      }
      srt = srt + '\n\n';
      return srt;
    }
  }, {
    key: 'zero',
    value: function zero() {
      var newSub = new Subtitle();
      newSub.setIndex(1);
      newSub.setText(this.getText());
      newSub.setStartTime(new _Time2['default'](0, 0, 0, 0));
      var delta = this.getEndTime().toSeconds() - this.getStartTime().toSeconds();
      newSub.setEndTime(_Time2['default'].fromSeconds(delta));
      return newSub;
    }
  }]);

  return Subtitle;
})();

exports['default'] = Subtitle;
module.exports = exports['default'];